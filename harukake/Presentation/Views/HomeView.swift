//
//  HomeView.swift
//  harukake
//
//  This project is licensed under the CC BY-NC 4.0 license.
//  See the LICENSE file in the project root for full license information.
//
//  Non-commercial use only.
//

import SwiftUI

struct HomeView: View {
    @StateObject private var cgController = CGBackgroundController()
    @State private var showingRecord = false
    @State private var showingAnalytics = false
    @State private var showingStory = false
    @State private var showingSettings = false
    @State private var showingMessages = false
    @State private var showingMissions = false

    var body: some View {
        ZStack {
            // 1) ËÉåÊôØCGÔºàÂ∏∏ÊôÇË°®Á§∫Ôºâ
            CGBackgroundView(image: cgController.currentImageName)
                .ignoresSafeArea()
            
            // 2) Á´ã„Å°Áµµ„É¨„Ç§„É§„ÉºÔºà‰ªäÂõû„ÅØ„Çπ„Ç≠„ÉÉ„ÉóÔºâ
            // CharacterLayerView()
            
            // 3) UI„Ç™„Éº„Éê„Éº„É¨„Ç§
            VStack(spacing: 0) {
                // ‰∏äÈÉ®„Çπ„ÉÜ„Éº„Çø„Çπ„Éê„Éº
                TopStatusBar()
                    .padding(.horizontal, 16)
                    .padding(.top, 8)
                
                Spacer()
            }
            
            // Â∑¶ÂÅ¥„Ç∑„Éß„Éº„Éà„Ç´„ÉÉ„Éà
            LeftShortcuts(
                showingMessages: $showingMessages,
                showingMissions: $showingMissions
            )
            .padding(.leading, 12)
            .padding(.top, 72)
            .frame(maxWidth: .infinity, maxHeight: .infinity, alignment: .topLeading)
            
            // Âè≥‰∏ä„É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£
            RightUtilities(showingSettings: $showingSettings)
                .padding(.trailing, 12)
                .padding(.top, 8)
                .frame(maxWidth: .infinity, maxHeight: .infinity, alignment: .topTrailing)
            
            // 4) „Ç≥„É°„É≥„Éà„Ç™„Éº„Éê„Éº„É¨„Ç§ÔºàÂ∞ÜÊù•ÂÆüË£ÖÔºâ
            // CommentOverlay()
        }
        .safeAreaInset(edge: .bottom) {
            BottomMenuBar(
                showingRecord: $showingRecord,
                showingAnalytics: $showingAnalytics,
                showingStory: $showingStory,
                showingSettings: $showingSettings
            )
        }
        .task {
            await cgController.preload()
            cgController.updateForTimeOfDay()
        }
        .onReceive(NotificationCenter.default.publisher(for: UIApplication.didReceiveMemoryWarningNotification)) { _ in
            cgController.handleMemoryWarning()
        }
        .sheet(isPresented: $showingRecord) {
            RecordView()
        }
        .sheet(isPresented: $showingAnalytics) {
            AnalyticsView()
        }
        .sheet(isPresented: $showingStory) {
            StoryView()
        }
        .sheet(isPresented: $showingSettings) {
            SettingsView()
        }
        .sheet(isPresented: $showingMessages) {
            MessagesView()
        }
        .sheet(isPresented: $showingMissions) {
            MissionsView()
        }
    }
}

struct NavigationButton: View {
    let icon: String
    let title: String
    let action: () -> Void

    var body: some View {
        Button(action: action) {
            VStack(spacing: 8) {
                Image(systemName: icon)
                    .font(.title2)
                Text(title)
                    .font(.caption)
            }
            .frame(maxWidth: .infinity)
            .padding(.vertical, 12)
        }
        .buttonStyle(PlainButtonStyle())
        .foregroundStyle(.primary)
    }
}

struct MessagesView: View {
    var body: some View {
        NavigationView {
            VStack(spacing: 20) {
                Text("üí¨ „Ç≠„É£„É©„ÇØ„Çø„Éº„É°„ÉÉ„Çª„Éº„Ç∏")
                    .font(.title2)
                    .fontWeight(.bold)

                Text("„Ç≠„É£„É©„ÇØ„Çø„Éº„Åã„Çâ„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏Ê©üËÉΩ„ÅØ\nÈñãÁô∫‰∏≠„Åß„Åô...")
                    .multilineTextAlignment(.center)
                    .foregroundStyle(.secondary)

                Spacer()
            }
            .padding()
            .navigationTitle("„É°„ÉÉ„Çª„Éº„Ç∏")
            .navigationBarTitleDisplayMode(.inline)
        }
    }
}

struct MissionsView: View {
    var body: some View {
        NavigationView {
            VStack(spacing: 20) {
                Text("üéØ „Éü„ÉÉ„Ç∑„Éß„É≥")
                    .font(.title2)
                    .fontWeight(.bold)

                Text("„Éü„ÉÉ„Ç∑„Éß„É≥„Éª„ÉÅ„É£„É¨„É≥„Ç∏Ê©üËÉΩ„ÅØ\nÈñãÁô∫‰∏≠„Åß„Åô...")
                    .multilineTextAlignment(.center)
                    .foregroundStyle(.secondary)

                Spacer()
            }
            .padding()
            .navigationTitle("„Éü„ÉÉ„Ç∑„Éß„É≥")
            .navigationBarTitleDisplayMode(.inline)
        }
    }
}

#Preview {
    HomeView()
}
